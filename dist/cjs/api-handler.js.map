{"version":3,"file":"api-handler.js","sourceRoot":"","sources":["../../src/api-handler.ts"],"names":[],"mappings":";;;;;AAKA,6BAqBC;AA1BD,wCAA2C;AAC3C,8CAAyB;AACzB,sDAA8B;AAC9B,4DAAiC;AAElB,KAAK,UAAU,UAAU,CACtC,EAAoB,EACpB,UAAwC,EAAE;IAE1C,IAAI,CAAC;QACH,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC;YAC3B,MAAM,IAAA,YAAK,EAAC,OAAO,CAAC,CAAC;YACrB,MAAM,IAAA,YAAK,EAAC,qDAAqD,CAAC,CAAC;YACnE,MAAM,IAAI,GAAG,MAAM,EAAE,EAAE,CAAC;YACxB,MAAM,IAAA,YAAK,EAAC,QAAQ,CAAC,CAAC;YACtB,OAAO,qBAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,mBAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5D,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,EAAE,EAAE,CAAC;QACxB,OAAO,qBAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,mBAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC;YAC3B,MAAM,IAAA,YAAK,EAAC,UAAU,CAAC,CAAC;QAC1B,CAAC;QACD,gBAAM,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACjC,OAAO,qBAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,EAAE,EAAE,MAAM,EAAE,mBAAM,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3F,CAAC;AACH,CAAC","sourcesContent":["import { NextResponse } from 'next/server';\r\nimport query from './db';\r\nimport logger from './logger';\r\nimport STATUS from './constants';\r\n\r\nexport default async function apiHandler<T>(\r\n  fn: () => Promise<T>,\r\n  options: { useTransaction?: boolean } = {}\r\n): Promise<NextResponse> {\r\n  try {\r\n    if (options.useTransaction) {\r\n      await query('BEGIN');\r\n      await query('SET SESSION idle_in_transaction_session_timeout = 0');\r\n      const data = await fn();\r\n      await query('COMMIT');\r\n      return NextResponse.json({ data }, { status: STATUS.OK });\r\n    }\r\n    const data = await fn();\r\n    return NextResponse.json({ data }, { status: STATUS.OK });\r\n  } catch (error) {\r\n    if (options.useTransaction) {\r\n      await query('ROLLBACK');\r\n    }\r\n    logger.error('API error', error);\r\n    return NextResponse.json({ message: 'Internal server error' }, { status: STATUS.ERROR });\r\n  }\r\n}"]}